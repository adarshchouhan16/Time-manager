{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\LENOVO\\\\task-manage\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useReducer, useEffect, useState, useCallback } from 'react';\nimport './App.css';\n\n// Define initial state\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialState = {\n  tasks: [],\n  filter: 'All',\n  searchQuery: ''\n};\n\n// Define reducer\nfunction reducer(state, action) {\n  switch (action.type) {\n    case 'INITIALIZE':\n      return {\n        ...state,\n        tasks: action.payload\n      };\n    case 'ADD_TASK':\n      return {\n        ...state,\n        tasks: [...state.tasks, action.payload]\n      };\n    case 'DELETE_TASK':\n      return {\n        ...state,\n        tasks: state.tasks.filter(task => task.id !== action.payload)\n      };\n    case 'TOGGLE_COMPLETION':\n      return {\n        ...state,\n        tasks: state.tasks.map(task => task.id === action.payload ? {\n          ...task,\n          completed: !task.completed\n        } : task)\n      };\n    case 'EDIT_TASK':\n      return {\n        ...state,\n        tasks: state.tasks.map(task => task.id === action.payload.id ? action.payload : task)\n      };\n    case 'SET_FILTER':\n      return {\n        ...state,\n        filter: action.payload\n      };\n    case 'SET_SEARCH_QUERY':\n      return {\n        ...state,\n        searchQuery: action.payload\n      };\n    default:\n      return state;\n  }\n}\nfunction App() {\n  _s();\n  const [state, dispatch] = useReducer(reducer, initialState);\n  const {\n    tasks,\n    filter,\n    searchQuery\n  } = state;\n  const [expandedTask, setExpandedTask] = useState(null);\n  const [isAddingTask, setIsAddingTask] = useState(false);\n  const [editingTask, setEditingTask] = useState(null);\n  const [newTask, setNewTask] = useState({\n    title: '',\n    description: '',\n    dueDate: '',\n    priority: ''\n  });\n  const [darkMode, setDarkMode] = useState(false);\n  const [error, setError] = useState('');\n\n  // Initialize tasks from localStorage\n  useEffect(() => {\n    const savedTasks = JSON.parse(localStorage.getItem('tasks')) || [];\n    dispatch({\n      type: 'INITIALIZE',\n      payload: savedTasks\n    });\n  }, []);\n\n  // Persist tasks to localStorage\n  useEffect(() => {\n    localStorage.setItem('tasks', JSON.stringify(tasks));\n  }, [tasks]);\n\n  // Toggle dark mode\n  useEffect(() => {\n    document.body.classList.toggle('dark', darkMode);\n  }, [darkMode]);\n\n  // Filter and search tasks\n  const filteredTasks = tasks.filter(task => {\n    const matchesFilter = filter === 'All' || filter === 'Done' && task.completed || filter !== 'Done' && task.priority === filter && !task.completed;\n    const matchesSearch = task.title.toLowerCase().includes(searchQuery.toLowerCase());\n    return matchesFilter && matchesSearch;\n  });\n\n  // Handle adding a new task with validation\n  const addTask = useCallback(() => {\n    const {\n      title,\n      description,\n      dueDate,\n      priority\n    } = newTask;\n\n    // Basic validation\n    if (!title.trim() || !description.trim() || !dueDate || !priority) {\n      setError('All fields are required.');\n      return;\n    }\n\n    // Unique title validation\n    const titleExists = tasks.some(task => task.title.toLowerCase() === title.toLowerCase());\n    if (titleExists) {\n      setError('Task title must be unique.');\n      return;\n    }\n\n    // Due date validation\n    const today = new Date().toISOString().split('T')[0];\n    if (dueDate < today) {\n      setError('Due date cannot be in the past.');\n      return;\n    }\n    const taskToAdd = {\n      ...newTask,\n      id: tasks.length ? Math.max(...tasks.map(task => task.id)) + 1 : 1,\n      completed: false\n    };\n    dispatch({\n      type: 'ADD_TASK',\n      payload: taskToAdd\n    });\n    setNewTask({\n      title: '',\n      description: '',\n      dueDate: '',\n      priority: ''\n    });\n    setIsAddingTask(false);\n    setError('');\n  }, [newTask, tasks]);\n\n  // Handle editing a task with validation\n  const saveEditedTask = useCallback(() => {\n    const {\n      title,\n      description,\n      dueDate,\n      priority\n    } = editingTask;\n\n    // Basic validation\n    if (!title.trim() || !description.trim() || !dueDate || !priority) {\n      setError('All fields are required.');\n      return;\n    }\n\n    // Unique title validation (exclude current task)\n    const titleExists = tasks.some(task => task.title.toLowerCase() === title.toLowerCase() && task.id !== editingTask.id);\n    if (titleExists) {\n      setError('Task title must be unique.');\n      return;\n    }\n\n    // Due date validation\n    const today = new Date().toISOString().split('T')[0];\n    if (dueDate < today) {\n      setError('Due date cannot be in the past.');\n      return;\n    }\n    dispatch({\n      type: 'EDIT_TASK',\n      payload: editingTask\n    });\n    setEditingTask(null);\n    setError('');\n  }, [editingTask, tasks]);\n\n  // Toggle task expansion\n  const toggleTaskExpansion = useCallback(id => {\n    setExpandedTask(expandedTask === id ? null : id);\n  }, [expandedTask]);\n\n  // Toggle task completion\n  const toggleTaskCompletion = useCallback(id => {\n    dispatch({\n      type: 'TOGGLE_COMPLETION',\n      payload: id\n    });\n  }, []);\n\n  // Delete task\n  const deleteTask = useCallback(id => {\n    if (window.confirm('Are you sure you want to delete this task?')) {\n      dispatch({\n        type: 'DELETE_TASK',\n        payload: id\n      });\n    }\n  }, []);\n\n  // Start editing task\n  const startEditingTask = useCallback(task => {\n    setEditingTask(task);\n    setExpandedTask(task.id);\n  }, []);\n\n  // Handle search input\n  const handleSearch = useCallback(e => {\n    dispatch({\n      type: 'SET_SEARCH_QUERY',\n      payload: e.target.value\n    });\n  }, []);\n\n  // Handle filter change\n  const handleFilterChange = useCallback(priority => {\n    dispatch({\n      type: 'SET_FILTER',\n      payload: priority\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `App ${darkMode ? 'dark' : ''}`,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Task Manager\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"icon-button\",\n          onClick: () => setDarkMode(!darkMode),\n          children: darkMode ? '☀️' : '🌙'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"add-task-button\",\n        onClick: () => setIsAddingTask(true),\n        children: \"+ Add New Task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"search-filter\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Search by title...\",\n          value: searchQuery,\n          onChange: handleSearch\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"filter-buttons\",\n          children: ['All', 'High', 'Medium', 'Low', 'Done'].map(priority => /*#__PURE__*/_jsxDEV(\"button\", {\n            className: `filter-button ${filter === priority ? 'active' : ''}`,\n            onClick: () => handleFilterChange(priority),\n            children: priority\n          }, priority, false, {\n            fileName: _jsxFileName,\n            lineNumber: 206,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error-message\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 19\n      }, this), isAddingTask && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"add-task-form\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Add New Task\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Task Name\",\n          value: newTask.title,\n          onChange: e => setNewTask({\n            ...newTask,\n            title: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          placeholder: \"Description\",\n          value: newTask.description,\n          onChange: e => setNewTask({\n            ...newTask,\n            description: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"date-input\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"\\uD83D\\uDCC5\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 232,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"date\",\n            value: newTask.dueDate,\n            onChange: e => setNewTask({\n              ...newTask,\n              dueDate: e.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 233,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: newTask.priority,\n          onChange: e => setNewTask({\n            ...newTask,\n            priority: e.target.value\n          }),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Select Priority\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 243,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"High\",\n            children: \"High\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 244,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Medium\",\n            children: \"Medium\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 245,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Low\",\n            children: \"Low\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 246,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-buttons\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: addTask,\n            children: \"Add Task\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 249,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => {\n              setIsAddingTask(false);\n              setError('');\n            },\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 250,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 11\n      }, this), filteredTasks.length ? filteredTasks.map(task => /*#__PURE__*/_jsxDEV(TaskCard, {\n        task: task,\n        isExpanded: expandedTask === task.id,\n        toggleExpansion: toggleTaskExpansion,\n        toggleCompletion: toggleTaskCompletion,\n        startEditing: startEditingTask,\n        deleteTask: deleteTask,\n        setEditingTask: setEditingTask,\n        setExpandedTask: setExpandedTask,\n        setError: setError\n      }, task.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 13\n      }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No tasks found.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 270,\n        columnNumber: 11\n      }, this), editingTask && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"edit-task-form\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Edit Task\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 274,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: editingTask.title,\n          onChange: e => setEditingTask({\n            ...editingTask,\n            title: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 275,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          value: editingTask.description,\n          onChange: e => setEditingTask({\n            ...editingTask,\n            description: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 280,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"date-input\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"\\uD83D\\uDCC5\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 285,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"date\",\n            value: editingTask.dueDate,\n            onChange: e => setEditingTask({\n              ...editingTask,\n              dueDate: e.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 286,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 284,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: editingTask.priority,\n          onChange: e => setEditingTask({\n            ...editingTask,\n            priority: e.target.value\n          }),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"High\",\n            children: \"High\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 296,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Medium\",\n            children: \"Medium\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 297,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Low\",\n            children: \"Low\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 298,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 292,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-buttons\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: saveEditedTask,\n            children: \"Save\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 301,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => {\n              setEditingTask(null);\n              setError('');\n            },\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 302,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 300,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 186,\n    columnNumber: 5\n  }, this);\n}\n\n// Memoized TaskCard to prevent unnecessary re-renders\n_s(App, \"LLvY834ta+SSxGwGyNUN89+HsLw=\");\n_c = App;\nconst TaskCard = /*#__PURE__*/React.memo(_c2 = ({\n  task,\n  isExpanded,\n  toggleExpansion,\n  toggleCompletion,\n  startEditing,\n  deleteTask\n}) => {\n  const formatDate = dateString => {\n    const date = new Date(dateString);\n    return date.toLocaleDateString('en-US', {\n      day: 'numeric',\n      month: 'short',\n      year: 'numeric'\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `task-card ${task.completed ? 'completed-task' : ''}`,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"task-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"task-title-date\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          checked: task.completed,\n          onChange: () => toggleCompletion(task.id)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 322,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          className: task.completed ? 'completed' : '',\n          children: task.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 327,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"due-date\",\n          children: [\"Due: \", formatDate(task.dueDate)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 328,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 321,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"task-priority-expand\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: `priority ${task.priority.toLowerCase()}`,\n          children: task.priority\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 331,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"expand-button\",\n          onClick: () => toggleExpansion(task.id),\n          children: isExpanded ? '▲' : '▼'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 334,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 330,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 320,\n      columnNumber: 7\n    }, this), isExpanded && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"task-details\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: task.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 341,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"task-actions\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => startEditing(task),\n          children: \"Edit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 343,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => deleteTask(task.id),\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 344,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 342,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 340,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 319,\n    columnNumber: 5\n  }, this);\n});\n_c3 = TaskCard;\nexport default App;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"App\");\n$RefreshReg$(_c2, \"TaskCard$React.memo\");\n$RefreshReg$(_c3, \"TaskCard\");","map":{"version":3,"names":["React","useReducer","useEffect","useState","useCallback","jsxDEV","_jsxDEV","initialState","tasks","filter","searchQuery","reducer","state","action","type","payload","task","id","map","completed","App","_s","dispatch","expandedTask","setExpandedTask","isAddingTask","setIsAddingTask","editingTask","setEditingTask","newTask","setNewTask","title","description","dueDate","priority","darkMode","setDarkMode","error","setError","savedTasks","JSON","parse","localStorage","getItem","setItem","stringify","document","body","classList","toggle","filteredTasks","matchesFilter","matchesSearch","toLowerCase","includes","addTask","trim","titleExists","some","today","Date","toISOString","split","taskToAdd","length","Math","max","saveEditedTask","toggleTaskExpansion","toggleTaskCompletion","deleteTask","window","confirm","startEditingTask","handleSearch","e","target","value","handleFilterChange","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","placeholder","onChange","TaskCard","isExpanded","toggleExpansion","toggleCompletion","startEditing","_c","memo","_c2","formatDate","dateString","date","toLocaleDateString","day","month","year","checked","_c3","$RefreshReg$"],"sources":["C:/Users/LENOVO/task-manage/src/App.js"],"sourcesContent":["import React, { useReducer, useEffect, useState, useCallback } from 'react';\nimport './App.css';\n\n// Define initial state\nconst initialState = {\n  tasks: [],\n  filter: 'All',\n  searchQuery: '',\n};\n\n// Define reducer\nfunction reducer(state, action) {\n  switch (action.type) {\n    case 'INITIALIZE':\n      return { ...state, tasks: action.payload };\n    case 'ADD_TASK':\n      return { ...state, tasks: [...state.tasks, action.payload] };\n    case 'DELETE_TASK':\n      return { ...state, tasks: state.tasks.filter(task => task.id !== action.payload) };\n    case 'TOGGLE_COMPLETION':\n      return {\n        ...state,\n        tasks: state.tasks.map(task =>\n          task.id === action.payload ? { ...task, completed: !task.completed } : task\n        ),\n      };\n    case 'EDIT_TASK':\n      return {\n        ...state,\n        tasks: state.tasks.map(task =>\n          task.id === action.payload.id ? action.payload : task\n        ),\n      };\n    case 'SET_FILTER':\n      return { ...state, filter: action.payload };\n    case 'SET_SEARCH_QUERY':\n      return { ...state, searchQuery: action.payload };\n    default:\n      return state;\n  }\n}\n\nfunction App() {\n  const [state, dispatch] = useReducer(reducer, initialState);\n  const { tasks, filter, searchQuery } = state;\n\n  const [expandedTask, setExpandedTask] = useState(null);\n  const [isAddingTask, setIsAddingTask] = useState(false);\n  const [editingTask, setEditingTask] = useState(null);\n  const [newTask, setNewTask] = useState({\n    title: '',\n    description: '',\n    dueDate: '',\n    priority: '',\n  });\n  const [darkMode, setDarkMode] = useState(false);\n  const [error, setError] = useState('');\n\n  // Initialize tasks from localStorage\n  useEffect(() => {\n    const savedTasks = JSON.parse(localStorage.getItem('tasks')) || [];\n    dispatch({ type: 'INITIALIZE', payload: savedTasks });\n  }, []);\n\n  // Persist tasks to localStorage\n  useEffect(() => {\n    localStorage.setItem('tasks', JSON.stringify(tasks));\n  }, [tasks]);\n\n  // Toggle dark mode\n  useEffect(() => {\n    document.body.classList.toggle('dark', darkMode);\n  }, [darkMode]);\n\n  // Filter and search tasks\n  const filteredTasks = tasks.filter(task => {\n    const matchesFilter =\n      filter === 'All' ||\n      (filter === 'Done' && task.completed) ||\n      (filter !== 'Done' && task.priority === filter && !task.completed);\n    const matchesSearch = task.title.toLowerCase().includes(searchQuery.toLowerCase());\n    return matchesFilter && matchesSearch;\n  });\n\n  // Handle adding a new task with validation\n  const addTask = useCallback(() => {\n    const { title, description, dueDate, priority } = newTask;\n\n    // Basic validation\n    if (!title.trim() || !description.trim() || !dueDate || !priority) {\n      setError('All fields are required.');\n      return;\n    }\n\n    // Unique title validation\n    const titleExists = tasks.some(task => task.title.toLowerCase() === title.toLowerCase());\n    if (titleExists) {\n      setError('Task title must be unique.');\n      return;\n    }\n\n    // Due date validation\n    const today = new Date().toISOString().split('T')[0];\n    if (dueDate < today) {\n      setError('Due date cannot be in the past.');\n      return;\n    }\n\n    const taskToAdd = {\n      ...newTask,\n      id: tasks.length ? Math.max(...tasks.map(task => task.id)) + 1 : 1,\n      completed: false,\n    };\n\n    dispatch({ type: 'ADD_TASK', payload: taskToAdd });\n    setNewTask({ title: '', description: '', dueDate: '', priority: '' });\n    setIsAddingTask(false);\n    setError('');\n  }, [newTask, tasks]);\n\n  // Handle editing a task with validation\n  const saveEditedTask = useCallback(() => {\n    const { title, description, dueDate, priority } = editingTask;\n\n    // Basic validation\n    if (!title.trim() || !description.trim() || !dueDate || !priority) {\n      setError('All fields are required.');\n      return;\n    }\n\n    // Unique title validation (exclude current task)\n    const titleExists = tasks.some(\n      task => task.title.toLowerCase() === title.toLowerCase() && task.id !== editingTask.id\n    );\n    if (titleExists) {\n      setError('Task title must be unique.');\n      return;\n    }\n\n    // Due date validation\n    const today = new Date().toISOString().split('T')[0];\n    if (dueDate < today) {\n      setError('Due date cannot be in the past.');\n      return;\n    }\n\n    dispatch({ type: 'EDIT_TASK', payload: editingTask });\n    setEditingTask(null);\n    setError('');\n  }, [editingTask, tasks]);\n\n  // Toggle task expansion\n  const toggleTaskExpansion = useCallback((id) => {\n    setExpandedTask(expandedTask === id ? null : id);\n  }, [expandedTask]);\n\n  // Toggle task completion\n  const toggleTaskCompletion = useCallback((id) => {\n    dispatch({ type: 'TOGGLE_COMPLETION', payload: id });\n  }, []);\n\n  // Delete task\n  const deleteTask = useCallback((id) => {\n    if (window.confirm('Are you sure you want to delete this task?')) {\n      dispatch({ type: 'DELETE_TASK', payload: id });\n    }\n  }, []);\n\n  // Start editing task\n  const startEditingTask = useCallback((task) => {\n    setEditingTask(task);\n    setExpandedTask(task.id);\n  }, []);\n\n  // Handle search input\n  const handleSearch = useCallback((e) => {\n    dispatch({ type: 'SET_SEARCH_QUERY', payload: e.target.value });\n  }, []);\n\n  // Handle filter change\n  const handleFilterChange = useCallback((priority) => {\n    dispatch({ type: 'SET_FILTER', payload: priority });\n  }, []);\n\n  return (\n    <div className={`App ${darkMode ? 'dark' : ''}`}>\n      <div className=\"container\">\n        <div className=\"header\">\n          <h1>Task Manager</h1>\n          <button className=\"icon-button\" onClick={() => setDarkMode(!darkMode)}>\n            {darkMode ? '☀️' : '🌙'}\n          </button>\n        </div>\n        <button className=\"add-task-button\" onClick={() => setIsAddingTask(true)}>\n          + Add New Task\n        </button>\n        <div className=\"search-filter\">\n          <input\n            type=\"text\"\n            placeholder=\"Search by title...\"\n            value={searchQuery}\n            onChange={handleSearch}\n          />\n          <div className=\"filter-buttons\">\n            {['All', 'High', 'Medium', 'Low', 'Done'].map(priority => (\n              <button\n                key={priority}\n                className={`filter-button ${filter === priority ? 'active' : ''}`}\n                onClick={() => handleFilterChange(priority)}\n              >\n                {priority}\n              </button>\n            ))}\n          </div>\n        </div>\n        {error && <div className=\"error-message\">{error}</div>}\n        {isAddingTask && (\n          <div className=\"add-task-form\">\n            <h2>Add New Task</h2>\n            <input\n              type=\"text\"\n              placeholder=\"Task Name\"\n              value={newTask.title}\n              onChange={e => setNewTask({ ...newTask, title: e.target.value })}\n            />\n            <textarea\n              placeholder=\"Description\"\n              value={newTask.description}\n              onChange={e => setNewTask({ ...newTask, description: e.target.value })}\n            />\n            <div className=\"date-input\">\n              <span>📅</span>\n              <input\n                type=\"date\"\n                value={newTask.dueDate}\n                onChange={e => setNewTask({ ...newTask, dueDate: e.target.value })}\n              />\n            </div>\n            <select\n              value={newTask.priority}\n              onChange={e => setNewTask({ ...newTask, priority: e.target.value })}\n            >\n              <option value=\"\">Select Priority</option>\n              <option value=\"High\">High</option>\n              <option value=\"Medium\">Medium</option>\n              <option value=\"Low\">Low</option>\n            </select>\n            <div className=\"form-buttons\">\n              <button onClick={addTask}>Add Task</button>\n              <button onClick={() => { setIsAddingTask(false); setError(''); }}>Cancel</button>\n            </div>\n          </div>\n        )}\n        {filteredTasks.length ? (\n          filteredTasks.map(task => (\n            <TaskCard\n              key={task.id}\n              task={task}\n              isExpanded={expandedTask === task.id}\n              toggleExpansion={toggleTaskExpansion}\n              toggleCompletion={toggleTaskCompletion}\n              startEditing={startEditingTask}\n              deleteTask={deleteTask}\n              setEditingTask={setEditingTask}\n              setExpandedTask={setExpandedTask}\n              setError={setError}\n            />\n          ))\n        ) : (\n          <p>No tasks found.</p>\n        )}\n        {editingTask && (\n          <div className=\"edit-task-form\">\n            <h2>Edit Task</h2>\n            <input\n              type=\"text\"\n              value={editingTask.title}\n              onChange={e => setEditingTask({ ...editingTask, title: e.target.value })}\n            />\n            <textarea\n              value={editingTask.description}\n              onChange={e => setEditingTask({ ...editingTask, description: e.target.value })}\n            />\n            <div className=\"date-input\">\n              <span>📅</span>\n              <input\n                type=\"date\"\n                value={editingTask.dueDate}\n                onChange={e => setEditingTask({ ...editingTask, dueDate: e.target.value })}\n              />\n            </div>\n            <select\n              value={editingTask.priority}\n              onChange={e => setEditingTask({ ...editingTask, priority: e.target.value })}\n            >\n              <option value=\"High\">High</option>\n              <option value=\"Medium\">Medium</option>\n              <option value=\"Low\">Low</option>\n            </select>\n            <div className=\"form-buttons\">\n              <button onClick={saveEditedTask}>Save</button>\n              <button onClick={() => { setEditingTask(null); setError(''); }}>Cancel</button>\n            </div>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n\n// Memoized TaskCard to prevent unnecessary re-renders\nconst TaskCard = React.memo(({ task, isExpanded, toggleExpansion, toggleCompletion, startEditing, deleteTask }) => {\n  const formatDate = (dateString) => {\n    const date = new Date(dateString);\n    return date.toLocaleDateString('en-US', { day: 'numeric', month: 'short', year: 'numeric' });\n  };\n\n  return (\n    <div className={`task-card ${task.completed ? 'completed-task' : ''}`}>\n      <div className=\"task-header\">\n        <div className=\"task-title-date\">\n          <input\n            type=\"checkbox\"\n            checked={task.completed}\n            onChange={() => toggleCompletion(task.id)}\n          />\n          <h3 className={task.completed ? 'completed' : ''}>{task.title}</h3>\n          <span className=\"due-date\">Due: {formatDate(task.dueDate)}</span>\n        </div>\n        <div className=\"task-priority-expand\">\n          <span className={`priority ${task.priority.toLowerCase()}`}>\n            {task.priority}\n          </span>\n          <button className=\"expand-button\" onClick={() => toggleExpansion(task.id)}>\n            {isExpanded ? '▲' : '▼'}\n          </button>\n        </div>\n      </div>\n      {isExpanded && (\n        <div className=\"task-details\">\n          <p>{task.description}</p>\n          <div className=\"task-actions\">\n            <button onClick={() => startEditing(task)}>Edit</button>\n            <button onClick={() => deleteTask(task.id)}>Delete</button>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n});\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}